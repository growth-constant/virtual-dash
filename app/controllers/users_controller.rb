class UsersController < ApplicationController
  before_action :set_user
  before_action :get_stripe_data, only: %i[activity]

  def edit
  end

  def update
    respond_to do |format|
      if invalid_email?
        format.html { render :edit }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      elsif @user.update(user_params)
        profile_complete
        format.html { redirect_to races_path, notice: 'Race was successfully updated.' }
        format.json { render :show, status: :ok, location: @user }
      else
        format.html { render :edit }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  def activity
    @race_name = params[:name] ? "%#{params[:name]}%" : '%%'
    races = Race.registrations_paid(current_user, @race_name)
    helpers.handle_stripe_connect(params, current_user)
    @activities = helpers.get_activities_from_user(races, current_user)
  end

  def create_connect_account
    linked_account = helpers.create_stripe_connect_account(current_user)
    redirect_to linked_account.url
  end

  def get_stripe_dashboard
    if current_user.stripe_conn_acc_id
      dashboard = helpers.create_stripe_dashboard_link(current_user)
      redirect_to dashboard
    else
      flash[:alert] = 'You need to create a Stripe account to access your balance dashboard.'
      redirect_to activity_path      
    end
  end

  private

  def set_user
    @user = current_user
  end

  def invalid_email?
    params['user']['email'].include? '@autogenerated.com'
  end

  def profile_complete
    u = current_user
    complete = (!u.name.nil? && u.name != '') \
               && (!u.birthdate.nil? &&  u.birthdate != '') \
               && (!u.gender.nil? && u.gender != '') \
               && (!u.phone.nil?  && u.phone != '') ? true : false

    u.update(profile_complete: true) if complete
  end

  # Only allow a list of trusted parameters through.
  def user_params
    params.require(:user).permit(:id, :gender, :phone, :profile_complete, :name, :birthdate, :email)
  end

  def get_stripe_data
    if current_user.stripe_conn_acc_id
      @balance = helpers.get_stripe_user_balance(current_user)
    end
  end

end
